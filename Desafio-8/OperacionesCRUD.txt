Operaciones:

3) Listar todos los documentos en cada coleccion: 

db.productos.find()
db.mensajes.find() 

4) Mostrar la cantidad de documentos almacenados en cada una de ellas:

db.productos.countDocuments()
db.mensajes.countDocuments()

A) Agregar un producto mas en la coleccion de productos: 

 db.productos.insert({title: "Campera", price: 4500, url: "www.instagram.com"})

B1) Listar los productos con precio menor a 1000 pesos:
 
db.productos.find({price: {$lt: 1000 } })

B2) Listar los productos con precio entre los 1000 a 3000 pesos:

db.productos.find({$and: [ {price: {$lte: 3000} }, {price: {$gte: 1000} } ] }).sort({price: 1})

B3) Listar los productos con precio mayor a 3000 pesos:

db.productos.find({price: {$gte: 3000} }).sort({price: 1})

B4) Realizar una consulta que traiga solo el nombre del tercer producto mas barato:

db.productos.findOne({$and: [ {price: {$lt: 2000} }, {price: {$gt: 1000} } ] }).title

C) Hacer una actualizacion sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100: 

db.productos.updateMany({price: {$gte: 800} }, {$set: {stock: 100} })

D) Cambiar el stock a cero de los productos con precios mayores a 4000 pesos:

db.productos.updateMany({price: {$gte: 4000} }, {$set: {stock: 0} })

E) Borrar los productos con precio menor a 1000 pesos:

db.productos.deleteMany({price: {$lt: 1000}})

6) Crear un usuario 'pepe' clave: 'asd456' que solo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la informacion:

db.createUser({user: "Pepe", pwd: "asd456", roles: [{role: "read", db: "Ecommerce"}]})